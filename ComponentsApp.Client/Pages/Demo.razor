@rendermode InteractiveAuto

<h3 class="font-bold text-lg py-4">Demo</h3>

<div class="card">
    <div class="card-header">
        <h3 class="card-title">
            @if (textInfo is not null)
            {
                <p class="text-blue-500">Info: @textInfo</p>
            }
            else
            {
                <p class="text-red-500">Info: No data</p>
            }
        </h3>
        <p class="card-description flex flex-col">
            <code>inputValue:</code> @inputValue
            <code>InputValue:</code> @InputValue
        </p>
    </div>
    <div class="card-content">
        <p>
            <label>
                inputValue:
                <input class="input" @bind="inputValue" @bind:event="oninput"/>
            </label>
        </p>

        <p>
            <label>
                InputValue:
                <input class="input" @bind="InputValue" @bind:event="oninput"/>
            </label>
        </p>
    </div>
    <div class="card-footer flex gap-2">
        <button class="flex-1 btn btn-primary btn-base" @onclick="UpdateText">Update text</button>
        <button class="flex-1 btn btn-primary btn-base" @onclick="(() => UpdateNumberText(1))">Update text</button>
    </div>
</div>

@code
{
    private string? inputValue;
    private string? InputValue { get; set; }
    private string? textInfo = null;
    private void UpdateText()
    {
        // This method will be called when the button is clicked
        textInfo = "Hello, World!";
    }
    private void UpdateNumberText(int i)
    {
        // This method will be called when the button is clicked
        textInfo = GetNumberText(i);
    }
    private string GetNumberText(int i)
    {
        return $"Number: {i}";
    }
}